version: '3.8'

services:

  ##### Web server nginx
  web_server_nginx:
    image: nginx:alpine
    container_name: web_server_nginx
    ports:
      - 9090:80
    volumes:
      - ./src:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - webapp_network

  #### docker image build from PHP 8.2
  webapp:
    build: 
      context: ./
      dockerfile: Dockerfile
    container_name: webapp
    image: laravel_admin_skeleton
    ports:
      - "9000:9000" 
    volumes:
      - ./src:/var/www
    working_dir: /var/www
    networks:
      - webapp_network

  #### Mysql database
  mysqldb:
    image: mysql:8.0
    container_name: mysqldb
    environment:
      MYSQL_DATABASE: maindb
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_PASSWORD: 123456
      MYSQL_USER: dba
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    ports:
      - "3366:3306"
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
      # - ./docker/mysql:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - webapp_network

  #### phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pma
    links:
      - mysqldb
    environment:
      PMA_HOST: mysqldb
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
      PMA_USER: dba
      PMA_PASSWORD: 123456
    ports:
      - 9091:80
    networks:
      - webapp_network

  #### PostgreSQL
  # pg:
  #   image: postgres:15.4-alpine
  #   container_name: pg
  #   environment:
  #     - POSTGRES_DB=maindb
  #     - POSTGRES_USER=root
  #     - POSTGRES_PASSWORD=123456
  #   ports:
  #     - 5432:5432
  #   volumes: 
  #     - ./docker/pg/data:/var/lib/postgresql/data
  #   networks:
  #     - webapp_network
  
networks:
  webapp_network:
    driver: bridge